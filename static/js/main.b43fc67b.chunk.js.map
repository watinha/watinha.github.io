{"version":3,"sources":["features/curriculum/curriculumSlice.js","features/curriculum/Header.js","features/curriculum/Loader.js","features/curriculum/Panel.js","features/curriculum/TabPanel.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["CURRICULUM","curriculumSlice","createSlice","name","initialState","loading","curriculum","view","reducers","load_start","state","action","load_end","set","payload","toggle_view","curriculumActions","actions","map_loading","map_title","title","map_address","address","map_contact","contacts","map_sections","sections","map_view","Header","useSelector","contact","className","ReactHtmlParser","map","con","id","key","href","link","icon_label","label","Loader","Panel","props","section","hidden","role","aria-hidden","aria-labelledby","paragraph","list","item","description","technologies","headline","tech","programming","prog","renderExpertises","TABPANEL","TabPanel","dispatch","useDispatch","useState","standard_view","setView","selected","setSelected","focused","setFocused","focusedTab","useRef","useEffect","current","focus","activate","diagonal_view","navigate","ev","keyCode","length","onClick","print_view","aria-label","generate_class","style","generate_style","tabIndex","aria-selected","aria-expanded","aria-controls","ref","onKeyDown","render_tab","i","left","Math","floor","scale","transform","marginTop","bottom","App","a","axios","get","response","configureStore","reducer","curriculumReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"yVAGMA,EACU,QADVA,EAEQ,oBAGDC,EAAkBC,YAAY,CACvCC,KAAM,aACNC,aAAc,CAAEC,SAAS,EAAOC,WAAY,GAAIC,KAAMP,GACtDQ,SAAU,CACNC,WAAY,SAACC,EAAOC,GAEhB,OADAD,EAAML,SAAU,EACTK,GAEXE,SAAU,SAACF,EAAOC,GAEd,OADAD,EAAML,SAAU,EACTK,GAEXG,IAAK,SAACH,EAAOC,GAET,OADAD,EAAMJ,WAAaK,EAAOG,QACnBJ,GAEXK,YAAa,SAACL,GAEV,OADAA,EAAMH,KAAsB,KAAfG,EAAMH,KAAcP,EAAwB,GAClDU,MAIJT,IAAf,QACae,EAAoBf,EAAgBgB,QACpCC,EAAc,SAACR,GAAD,OAAWA,EAAMJ,WAAWD,SAE1Cc,EAAY,SAACT,GAAD,OAAWA,EAAMJ,WAAWA,WAAWc,OACnDC,EAAc,SAACX,GAAD,OAAWA,EAAMJ,WAAWA,WAAWgB,SACrDC,EAAc,SAACb,GAAD,OAAWA,EAAMJ,WAAWA,WAAWkB,UACrDC,EAAe,SAACf,GAAD,OAAWA,EAAMJ,WAAWA,WAAWoB,UACtDC,EAAW,SAACjB,GAAD,OAAWA,EAAMJ,WAAWC,MC/BrC,SAASqB,IACvB,IAAMR,EAAQS,YAAYV,GACjBG,EAAUO,YAAYR,GACtBS,EAAUD,YAAYN,GAE5B,OACI,4BAAQQ,UAAU,UACvB,4BAAKX,GACI,uBAAGW,UAAU,WACRC,IAAgBV,IAErB,wBAAIS,UAAU,WACbD,GAAWA,EAAQG,KAAI,SAACC,EAAKC,GAAN,OACpB,wBAAIC,IAAKD,GACL,uBAAGE,KAAMH,EAAII,MACT,0BAAMP,UAAW,QACbG,EAAIK,aACR,0BAAMR,UAAU,SACXG,EAAIM,c,OCpBlB,SAASC,IACvB,IAAMpC,EAAUwB,YAAYX,GACzB,OAAQ,yBAAKa,UAAW1B,EAAU,cAAgB,W,YCJvC,SAASqC,EAAOC,GAC3B,IAAMC,EAAUD,EAAMC,QAChBC,EAASF,EAAME,OA4BrB,OACI,yBAAKd,UAAU,QAAQe,KAAK,WACvBC,cAAaF,EACbG,kBAAA,cAAwBJ,EAAQxB,OAChCe,GAAE,gBAAWS,EAAQxB,QACrBwB,EAAQK,WACL,uBAAGlB,UAAWa,EAAQxB,OACrBwB,EAAQK,WACZL,EAAQM,OAAmBN,EAAQM,KAjCxC,4BACCN,EAAQM,KAAKjB,KAAI,SAACkB,EAAMhB,GAAP,OACd,wBAAIC,IAAKD,GACJH,IAAgBmB,EAAKC,mBA+BzBR,EAAQS,cA3BQ,SAACT,GAAD,OACrB,6BACI,yBAAKb,UAAU,WACX,4BAAKa,EAAQS,aAAaC,UAC1B,4BACCV,EAAQS,aAAaH,KAAKjB,KAAI,SAACsB,EAAMpB,GAAP,OAC3B,wBAAIC,IAAKD,GAAKoB,EAAKH,kBAG3B,yBAAKrB,UAAU,WACX,4BAAKa,EAAQY,YAAYF,UACzB,4BACCV,EAAQY,YAAYN,KAAKjB,KAAI,SAACwB,EAAMtB,GAAP,OAC1B,wBAAIC,IAAKD,GAAKsB,EAAKL,mBAevBM,CAAiBd,ICpCjC,IAAMe,EACO,GADPA,EAIQ,GAJRA,EAKM,GALNA,EAMQ,GANRA,EAOQ,GAPRA,EAQS,GAGA,SAASC,IACd,IAAAlC,EAAWG,YAAYJ,GACvBoC,EAAWC,cADX,EAEkBC,mBAASC,GAF3B,mBAECzD,EAFD,KAEO0D,EAFP,OAG0BF,oBAAU,GAHpC,mBAGCG,EAHD,KAGWC,EAHX,OAIwBJ,mBAAS,GAJjC,mBAICK,EAJD,KAIUC,EAJV,KAKAC,EAAaC,mBAEnBC,qBAAU,WACFF,EAAWG,SACXH,EAAWG,QAAQC,UACxB,CAACN,IAEJ,IAkCMO,EAAW,SAACxC,GACd8B,EAAQW,GACRT,EAAYhC,IAWV0C,EAAW,SAAC1C,EAAI2C,GACdA,EAAGC,UAAYpB,IACfM,EAAQD,GACRG,GAAa,IAEbW,EAAGC,UAAYpB,GACfgB,EAASxC,IACR2C,EAAGC,UAAYpB,GACfmB,EAAGC,UAAYpB,IACfS,EAAU,EAAI1C,EAASsD,QACxBX,EAAWD,EAAU,IACpBU,EAAGC,UAAYpB,GACfmB,EAAGC,UAAYpB,IACfS,EAAU,GAAK,GAChBC,EAAWD,EAAU,GACN,KAAfU,EAAGC,UACHV,EAAW3C,EAASsD,OAAS,GAC7BL,EAASjD,EAASsD,OAAS,IAEZ,KAAfF,EAAGC,UACHV,EAAW,GACXM,EAAS,KAIjB,OACI,yBAAK5C,UAAU,UAAUe,KAAK,WAE9B,4BAAQf,UAAU,kBACVkD,QAAS,kBAnCbhB,EADA1D,IAAS2E,EACDlB,EAEAkB,QACZrB,EAAS7C,EAAkBD,gBAiCnBoE,aAAW,iBACf,0BAAMpD,UAAU,uBAGnBL,GAAYA,EAASO,KAAI,SAACW,EAAST,GAAV,OAC1B,yBAAKC,IAAKD,EACLJ,UAAWxB,EAAK6E,eAAejD,EAAI+B,GACnCmB,MAAO9E,EAAK+E,eACRnD,EAAIT,EAASsD,OAAQd,GACzBe,QAAS,kBAAMN,EAASxC,KACzB,6BAASJ,UAAWa,EAAQxB,OAvFjB,SAACe,EAAIS,GACpB,OAAIT,IAAOiC,EAEH,wBAAItB,KAAK,MACLyC,SAAUpD,IAAOiC,EAAU,GAAK,EAChCoB,gBAAerD,IAAO+B,EAClB,OAAS,QACbuB,gBAAetD,IAAO+B,EAClB,OAAS,QACbwB,gBAAA,gBAAwB9C,EAAQxB,OAChCe,GAAE,cAASS,EAAQxB,OACnBuE,IAAKrB,EACLsB,UAAW,SAACd,GAAD,OAAQD,EAAS1C,EAAG2C,KAC9BlC,EAAQU,UAMb,wBAAIR,KAAK,MACLyC,SAAUpD,IAAOiC,EAAU,GAAK,EAChCoB,gBAAerD,IAAO+B,EAClB,OAAS,QACbuB,gBAAetD,IAAO+B,EAClB,OAAS,QACbwB,gBAAA,gBAAwB9C,EAAQxB,OAChCe,GAAE,cAASS,EAAQxB,OACnBwE,UAAW,SAACd,GAAD,OAAQD,EAAS1C,EAAG2C,KAC9BlC,EAAQU,UA4DZuC,CAAW1D,EAAIS,GAChB,kBAACF,EAAD,CAAOE,QAASA,EACTC,OAAQqB,IAAa/B,EACjB,QAAU,UAExBA,EAAK,GAAK,kCAOvB,IAAM6B,EACK,CACHoB,eAAgB,SAACjD,GAAD,MAAQ,IACxBmD,eAAgB,SAACnD,EAAI6C,GACjB,IAAMc,EAAI3D,EAAK,EACT4D,EAAOC,KAAKC,MACQ,KAAf,EAAM,GAAFH,EAAM,IAAY,IAC3BI,EAAQF,KAAKC,MACQ,IAAhB,EAAKH,EAAEd,EAAL,IAAkB,IAC/B,MAAO,CACHmB,UAAW,gBAASD,EAAT,MACA,2BACXH,KAAK,GAAD,OAAKA,EAAL,KACJK,UAAW,SAMrBxB,EACK,CACHQ,eAAgB,SAACjD,EAAI+B,GAAL,wBACD/B,IAAO+B,EAAW,QAAU,KAC3CoB,eAAgB,SAACnD,EAAI6C,EAAQd,GAEzB,OAAI/B,IAAO+B,EACA,CAACkC,UAAW,EAAGC,OAAO,GAAD,OAFjB,GAAKlE,EAAK,GAEO,OACzB,CAAEiE,UAAW,KAK1BlB,EACK,CACHE,eAAgB,iBAAM,IACtBE,eAAgB,WACZ,MAAO,CAAEc,UAAW,K,4BCvIjBE,MAlBf,WACI,IAAMzC,EAAWC,cACXvD,EAAOsB,YAAYF,GAMzB,OAJA6C,qBAAU,WACNX,ELqBJ,uCAAO,WAAOA,GAAP,eAAA0C,EAAA,6DACH1C,EAAS7C,EAAkBP,cADxB,SAEoB+F,IAAMC,IAAIzG,GAF9B,OAEG0G,EAFH,OAGT7C,EAAS7C,EAAkBH,IAAI6F,EAAQ,OACjC7C,EAAS7C,EAAkBJ,YAJxB,2CAAP,0DKjBI,yBAAKmB,UAAS,cAASxB,GAAQuC,KAAK,QAChC,kBAACL,EAAD,MACA,kBAACb,EAAD,MACA,wBAAIG,UAAU,qBACd,kBAAC6B,EAAD,QCxBG+C,cAAe,CAC1BC,QAAS,CACL,WAAcC,KCOFC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCXNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAUC,MAAOA,GACf,kBAAC,EAAD,QAGJC,SAASC,eAAe,SDsHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,iB","file":"static/js/main.b43fc67b.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\n\nconst CURRICULUM = {\n    FILE_CLASS: 'files',\n    JSON_URL: './curriculum.json'\n};\n\nexport const curriculumSlice = createSlice({\n    name: 'curriculum',\n    initialState: { loading: false, curriculum: {}, view: CURRICULUM.FILE_CLASS },\n    reducers: {\n        load_start: (state, action) => {\n            state.loading = true;\n            return state;\n        },\n        load_end: (state, action) => {\n            state.loading = false;\n            return state;\n        },\n        set: (state, action) => {\n            state.curriculum = action.payload;\n            return state;\n        },\n        toggle_view: (state) => {\n            state.view = state.view === '' ? CURRICULUM.FILE_CLASS : '';\n            return state;\n        }\n    },\n});\nexport default curriculumSlice.reducer;\nexport const curriculumActions = curriculumSlice.actions;\nexport const map_loading = (state) => state.curriculum.loading;\nexport const map_curriculum = (state) => state.curriculum.curriculum;\nexport const map_title = (state) => state.curriculum.curriculum.title;\nexport const map_address = (state) => state.curriculum.curriculum.address;\nexport const map_contact = (state) => state.curriculum.curriculum.contacts;\nexport const map_sections = (state) => state.curriculum.curriculum.sections;\nexport const map_view = (state) => state.curriculum.view;\nexport const loadCurriculum = () => {\n    return async (dispatch) => {\n        dispatch(curriculumActions.load_start());\n        const response = await axios.get(CURRICULUM.JSON_URL);\n\t\tdispatch(curriculumActions.set(response['data']));\n        dispatch(curriculumActions.load_end());\n    };\n};\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport ReactHtmlParser from 'react-html-parser';\n\nimport { map_contact, map_title, map_address }\n    from './curriculumSlice';\n\nexport default function Header () {\n\tconst title = useSelector(map_title),\n          address = useSelector(map_address),\n          contact = useSelector(map_contact);\n\n    return (\n        <header className=\"header\">\n\t\t\t<h1>{title}</h1>\n            <p className=\"address\">\n                {ReactHtmlParser(address)}\n            </p>\n            <ul className=\"contact\">\n            {contact && contact.map((con, id) =>\n                <li key={id}>\n                    <a href={con.link}>\n                        <span className={\"icon \" +\n                            con.icon_label}></span>\n                        <span className=\"label\">\n                            {con.label}</span>\n                    </a>\n                </li>\n            )}\n            </ul>\n        </header>\n    );\n}\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { map_loading } from './curriculumSlice';\nimport './loader.css';\n\nexport default function Loader () {\n\tconst loading = useSelector(map_loading);\n    return (<div className={loading ? \"loader show\" : \"loader\"}></div>);\n}\n","import React from 'react';\nimport ReactHtmlParser from 'react-html-parser';\n\nexport default function Panel (props) {\n    const section = props.section,\n          hidden = props.hidden;\n\n    const renderList = (list) =>\n        <ul>\n        {section.list.map((item, id) =>\n            <li key={id}>\n                {ReactHtmlParser(item.description)}\n            </li>)}\n        </ul>;\n\n    const renderExpertises = (section) =>\n        <div>\n            <div className=\"columns\">\n                <h4>{section.technologies.headline}</h4>\n                <ul>\n                {section.technologies.list.map((tech, id) =>\n                    <li key={id}>{tech.description}</li>)}\n                </ul>\n            </div>\n            <div className=\"columns\">\n                <h4>{section.programming.headline}</h4>\n                <ul>\n                {section.programming.list.map((prog, id) =>\n                    <li key={id}>{prog.description}</li>)}\n                </ul>\n            </div>\n        </div>;\n\n    return (\n        <div className=\"panel\" role=\"tabpanel\"\n             aria-hidden={hidden}\n             aria-labelledby={`tab_${section.title}`}\n             id={`panel_${section.title}`}>\n            {section.paragraph &&\n                <p className={section.title}>\n                {section.paragraph}</p>}\n            {section.list && renderList(section.list)}\n            {section.technologies &&\n                renderExpertises(section)}\n        </div>\n    );\n}\n","import React, { useState, useEffect, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { curriculumActions, map_sections }\n    from './curriculumSlice';\nimport Panel from './Panel';\n\nconst TABPANEL = {\n    ESC_KEY: 27,\n    END_KEY: 35,\n    HOME_KEY: 36,\n    LEFT_KEY: 37,\n    UP_KEY: 38,\n    RIGHT_KEY:39,\n    DOWN_KEY: 40,\n    ENTER_KEY: 13,\n};\n\nexport default function TabPanel () {\n    const sections = useSelector(map_sections),\n          dispatch = useDispatch(),\n          [view, setView] = useState(standard_view),\n          [selected, setSelected] = useState(-1),\n          [focused, setFocused] = useState(0),\n          focusedTab = useRef();\n\n    useEffect(() => {\n        if (focusedTab.current)\n            focusedTab.current.focus();\n    }, [focused]);\n\n    const render_tab = (id, section) => {\n        if (id === focused) {\n            return (\n                <h2 role=\"tab\"\n                    tabIndex={id === focused ? 0 : -1}\n                    aria-selected={id === selected ?\n                        \"true\" : \"false\"}\n                    aria-expanded={id === selected ?\n                        \"true\" : \"false\"}\n                    aria-controls={`panel_${section.title}`}\n                    id={`tab_${section.title}`}\n                    ref={focusedTab}\n                    onKeyDown={(ev) => navigate(id,ev)}>\n                    {section.headline}\n                </h2>\n            );\n        }\n        else {\n            return (\n                <h2 role=\"tab\"\n                    tabIndex={id === focused ? 0 : -1}\n                    aria-selected={id === selected ?\n                        \"true\" : \"false\"}\n                    aria-expanded={id === selected ?\n                        \"true\" : \"false\"}\n                    aria-controls={`panel_${section.title}`}\n                    id={`tab_${section.title}`}\n                    onKeyDown={(ev) => navigate(id,ev)}>\n                    {section.headline}\n                </h2>\n            );\n        }\n    };\n\n    const activate = (id) => {\n        setView(diagonal_view);\n        setSelected(id);\n    };\n\n    const toggle_view = () => {\n        if (view === print_view)\n            setView(standard_view);\n        else\n            setView(print_view);\n        dispatch(curriculumActions.toggle_view());\n    };\n\n    const navigate = (id, ev) => {\n        if (ev.keyCode === TABPANEL.ESC_KEY) {\n            setView(standard_view);\n            setSelected(-1);\n        }\n        if (ev.keyCode === TABPANEL.ENTER_KEY)\n            activate(id);\n        if ((ev.keyCode === TABPANEL.RIGHT_KEY ||\n             ev.keyCode === TABPANEL.DOWN_KEY) &&\n             focused + 1 < sections.length)\n            setFocused(focused + 1);\n        if ((ev.keyCode === TABPANEL.UP_KEY ||\n             ev.keyCode === TABPANEL.LEFT_KEY) &&\n             focused - 1 >= 0)\n            setFocused(focused - 1);\n        if (ev.keyCode === 35) {\n            setFocused(sections.length - 1);\n            activate(sections.length - 1);\n        }\n        if (ev.keyCode === 34) {\n            setFocused(0);\n            activate(0);\n        }\n    };\n\n    return (\n        <div className=\"wrapper\" role=\"tablist\">\n\n        <button className=\"layout_switcher\"\n                onClick={() => toggle_view()}\n                aria-label=\"print version\">\n            <span className=\"icon reset_layout\" />\n        </button>\n\n        {sections && sections.map((section, id) =>\n        <div key={id}\n             className={view.generate_class(id, selected)}\n             style={view.generate_style(\n                 id, sections.length, selected)}\n             onClick={() => activate(id)}>\n            <section className={section.title}>\n                {render_tab(id, section, selected)}\n                <Panel section={section}\n                       hidden={selected === id ?\n                           \"false\" : \"true\"} />\n            </section>\n            {id < 2 && <hr />}\n        </div>\n        )}\n        </div>\n    );\n}\n\nconst standard_view = (() => {\n    return {\n        generate_class: (id) => \"\",\n        generate_style: (id, length) => {\n            const i = id + 1,\n                  left = Math.floor(\n                      (5 + i*0.9*3) * 100) / 100,\n                  scale = Math.floor(\n                      (6+4*(i/length))*10)/100;\n            return {\n                transform: `scale(${scale}) ` +\n                           \"matrix(1, 0, 0, 1, 0, 0)\",\n                left: `${left}%`,\n                marginTop: \"-4%\"\n            };\n        }\n    };\n})();\n\nconst diagonal_view = (() => {\n    return {\n        generate_class: (id, selected) =>\n            `diagonal${id === selected ? \" open\" : \"\"}`,\n        generate_style: (id, length, selected) => {\n            const bottom = 50 * id - 10;\n            if (id === selected)\n                return {marginTop: 0, bottom: `${bottom}px`};\n            return { marginTop: 0 };\n        }\n    };\n})();\n\nconst print_view = (() => {\n    return {\n        generate_class: () => \"\",\n        generate_style: () => {\n            return { marginTop: 0 };\n        }\n    };\n})();\n","import React, { useEffect }  from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\nimport Header from './features/curriculum/Header';\r\nimport Loader from './features/curriculum/Loader';\r\nimport TabPanel from './features/curriculum/TabPanel';\r\nimport { loadCurriculum, map_view }\r\n    from './features/curriculum/curriculumSlice';\r\n\r\nimport './css/files.css';\r\nimport './css/files_mobile.css';\r\nimport './css/reset.css';\r\nimport './css/reset_m.css';\r\n\r\nfunction App() {\r\n    const dispatch = useDispatch(),\r\n          view = useSelector(map_view);\r\n\r\n    useEffect(() => {\r\n        dispatch(loadCurriculum());\r\n    });\r\n\r\n    return (\r\n        <div className={`App ${view}`} role=\"main\">\r\n            <Loader />\r\n            <Header />\r\n            <hr className=\"headerLongerLine\" />\r\n            <TabPanel />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from '@reduxjs/toolkit';\r\nimport curriculumReducer from '../features/curriculum/curriculumSlice';\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        'curriculum': curriculumReducer\r\n    },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}